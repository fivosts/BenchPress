version: 2.1

jobs:
  build_clgen:
    parameters:
      python_version:
        type: string
    machine:
      image: ubuntu-1604:202007-01
    steps:
      - checkout
      - run:
          name: Download Miniconda
          command: echo "HI"
      - run:
          name: LS
          command: ls
      - run:
          name: PWD
          command: pwd
      - run:
          name: Bootstrap application
          command: |
            "cmake y" | bash requirements.apt
      - run:
        command: mkdir build && cd build
      - run:
          name: Build application
          command: ../cmake/bin/cmake .. -DPYTHON=python3
      - run:
          name: Compile application
          command: make -j $(nproc)

workflows:
  version: 2
  python_versions:
    jobs:
      - build_clgen:
          matrix:
            parameters:
              python_version: ["3.8", "3.7", "3.6"]
          name: python<< matrix.python_version >> python version

      # - run:
      #     name: Install Miniconda
      #     command: start /wait C:\featuretools\\<< parameters.miniconda_pkg_name >> /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniconda3
      #     shell: cmd.exe
      # - run:
      #     name: Create New Python Environment
      #     command: |
      #         C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
      #         conda create -n featuretools python=<< parameters.python_version >>
      # - run:
      #     name: Install Graphviz
      #     command: |
      #         C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
      #         conda activate featuretools
      #         conda config --add channels conda-forge
      #         conda install python-graphviz -q -y
      # - run:
      #     name: Install Featuretools
      #     command: |
      #         C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
      #         conda activate featuretools
      #         python -m pip install --upgrade pip
      #         python -m pip install .
      #         python -m pip install -r test-requirements.txt
      # - run:
      #     name: Run Unit Tests
      #     command: |
      #         C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
      #         conda activate featuretools
      #         pytest featuretools\ -n 2


# jobs:
#   build:
#     machine:
#       image: ubuntu-1604:202007-01
#     parameters:
#       python:
#         type: string
#     steps:
#       - checkout
#       - run:
#         name: "Test"
#         command: <<matrix.python>> --version
      # - run: mkdir test-reports
      # - run:
      #     name: Download Selenium
      #     command: |
      #       curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      # - run:
      #     name: Start Selenium
      #     command: |
      #       java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
      #     background: true
      # - restore_cache:
      #     key: deps2-{{ checksum "requirements/dev.txt" }}
      # - run:
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install -r requirements/dev.txt


# os: linux
# dist: bionic

# language:
#   - python

# python:
#   - "3.7"

# services:
#   - mysql

# install:
#   - bash apt_deps.sh
#   - sudo cp /usr/lib/python3/dist-packages/apt_pkg.cpython-{36m,37m}-x86_64-linux-gnu.so
#   - sudo cp /usr/lib/python3/dist-packages/apt_inst.cpython-{36m,37m}-x86_64-linux-gnu.so
#   - bazel build //deeplearning/clgen

# before_script:
#   - python3 --version
#   - python --version
#   - bazel --version
#   - gcc --version
#   - python -m pip list tensorflow | grep tensorflow

# script:
#   - bazel-bin/deeplearning/clgen/clgen --min_samples 5 --config deeplearning/clgen/tests/data/tiny/config.pbtxt
