// coding=utf-8
// Copyright 2022 Foivos Tsimpourlas and Chris Cummins.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package benchpress;

option go_package = "benchpresspb";
option java_multiple_files = true;
option java_outer_classname = "CorpusProto";
option java_package = "com.benchpress";

// The specification of a pre-training corpus.
message PreTrainCorpus {
  // The input contentfiles to the corpus.
  // Shell variables are expanded. E.g. $HOME -> /home/<user>.
  oneof contentfiles {
    // The ID of an already-cached corpus.
    string content_id             = 1;
    // The path to a directory on the local system containing content files.
    string local_directory        = 2;
    // The path to a tarball archive file containing content files.
    string local_tar_archive      = 3;
    // The path to a bigQuery database containing files.
    string bq_database            = 4;
    // The path to a database of encoded files.
    string pre_encoded_corpus_url = 5;
  }
  optional tokenizer tokenizer    = 6;
  // A list of preprocessor passes to run on each contentfile in the corpus
  // prior to training, in the order in which they are run.
  repeated string preprocessor          = 7;
  optional string contentfile_separator = 8;
}

// The specification of a training corpus.
message Corpus {
  // The input contentfiles to the corpus.
  // Shell variables are expanded. E.g. $HOME -> /home/<user>.
  oneof contentfiles {
    // The ID of an already-cached corpus.
    string content_id             = 1;
    // The path to a directory on the local system containing content files.
    string local_directory        = 2;
    // The path to a tarball archive file containing content files.
    string local_tar_archive      = 3;
    // The path to a bigQuery database containing files.
    string bq_database            = 4;
    // The path to a database of encoded files.
    string pre_encoded_corpus_url = 5;
  }
  optional tokenizer tokenizer    = 6;
  // A list of preprocessor passes to run on each contentfile in the corpus
  // prior to training, in the order in which they are run.
  repeated string preprocessor          = 7;
  optional string contentfile_separator = 8;
}

// The tokenizer to use to encode the corpus.
message tokenizer{
  required string token_type             = 1;
  optional string token_list             = 2;
  optional bool   mask_tokens            = 3;
  optional bool   wordpiece_tokenization = 4;
}